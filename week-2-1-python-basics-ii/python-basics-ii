{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Python Basics II","provenance":[{"file_id":"https://github.com/saffarizadeh/INSY4054/blob/main/Python_Basics_II.ipynb","timestamp":1612209932029}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"CHN7fbx7_wiC"},"source":["<img src=\"http://saffarizadeh.com/Logo.png\" width=\"300px\"/>\n","\n","# *INSY 4054: Emerging Technologies*\n","\n","# **Week 2-2:** Python Basics II\n","\n","---"]},{"cell_type":"markdown","metadata":{"id":"e7FvlWD89aa1"},"source":["##Comparison Operators and Boolean variables\n","\n","Comparison operators, also called relational operators, compare two values and evaluate down to a single Boolean value.\n","\n","<table>\n","<tr>\n","<td><b>Operator</b></td>\n","<td><b>Meaning</b></td>\n","</tr>\n","<tr>\n","<td>==</td>\n","<td>Equal to</td>\n","</tr>\n","<tr>\n","<td>!=</td>\n","<td>Not equal to</td>\n","</tr>\n","<tr>\n","<td><</td>\n","<td>Less than</td>\n","</tr>\n","<tr>\n","<td>></td>\n","<td>Greater than</td>\n","</tr>\n","<tr>\n","<td><=</td>\n","<td>Less than or equal to</td>\n","</tr>\n","<tr>\n","<td>>=</td>\n","<td>Greater than or equal to</td>\n","</tr>\n","</table>"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"61EO87bc-wq1","executionInfo":{"status":"ok","timestamp":1612486957206,"user_tz":360,"elapsed":606,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"e70c5e0f-2feb-4a60-e684-16b02bb68724"},"source":["45 == 45"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":1}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y9EmOW14-0Pd","executionInfo":{"status":"ok","timestamp":1612486957425,"user_tz":360,"elapsed":810,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"2b483506-72eb-4136-9663-7e2a74444aa8"},"source":["45 == 543"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ums375u_-2Nu","executionInfo":{"status":"ok","timestamp":1612486957890,"user_tz":360,"elapsed":441,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"7d5eb502-d273-4236-dd82-52627e4bcbfe"},"source":["2 != 3"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kAIUbyBf-3x7","executionInfo":{"status":"ok","timestamp":1612486959980,"user_tz":360,"elapsed":478,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"aee38622-e2ab-4e36-96dc-cf3c547a4af7"},"source":["5 != 5"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TbSUJLhG-5Dd","executionInfo":{"status":"ok","timestamp":1612486961740,"user_tz":360,"elapsed":578,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"879fb36e-0aca-48fc-a8cd-ab8107db54f2"},"source":["'Hello' == 'Hello'"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DWU7NOxm-9FZ","executionInfo":{"status":"ok","timestamp":1612486963539,"user_tz":360,"elapsed":455,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"53983c34-69e0-444e-9485-7e8bf8166637"},"source":["'Hello' != 'hello'"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pKF4nH-C_C3V","executionInfo":{"status":"ok","timestamp":1612486966872,"user_tz":360,"elapsed":454,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"d8cf16c7-9df1-436e-bdda-972bfa2ad6ef"},"source":["42 == '42'"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BI-FHm-v_Hwt","executionInfo":{"status":"ok","timestamp":1612486971556,"user_tz":360,"elapsed":464,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"a91a5b9d-6cfa-443c-ced1-98ccdd70307e"},"source":["45 < 400"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"fY8ng0ae_fyO"},"source":["Python implements all of the usual operators for Boolean logic, but uses English words rather than symbols (&&, ||, etc.)."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u6TevLsU_qNU","executionInfo":{"status":"ok","timestamp":1612486981428,"user_tz":360,"elapsed":470,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"8b7ebbb5-e307-49c9-b940-14eb653c83c5"},"source":["x = 5\n","print(x)\n","y = (x == 7)\n","print(y)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["5\n","False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m9Kcfxy4_qGZ","executionInfo":{"status":"ok","timestamp":1612486999324,"user_tz":360,"elapsed":416,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"f8d02598-227f-4920-94ef-2767ef7b7e80"},"source":["is_task_done = True\n","is_tuesday = False\n","print(type(is_task_done))\n","print(is_task_done and is_tuesday) # Logical AND; prints \"False\"\n","print(is_task_done or is_tuesday)  # Logical OR; prints \"True\"\n","print(not is_task_done)   # Logical NOT; prints \"False\"\n","print(is_task_done != is_tuesday)  # Logical XOR; prints \"True\""],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'bool'>\n","False\n","True\n","False\n","True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"OtgQwXXpLB5A"},"source":["# if / elif / else\n","\n","If statements in Python look like this (pay attention to the indentation):"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"izbztOqFbNFk","executionInfo":{"status":"ok","timestamp":1612487068343,"user_tz":360,"elapsed":475,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"03cb6c13-bd0c-4dd8-f717-55c55a5c8bd9"},"source":["done = True\n","\n","if done:\n","  print(\"It is done!\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["It is done!\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"m_U3q2PcbxGu"},"source":["So, after `if` you need to provide a Boolean value.\n","This Boolean value could come directly from a variable or from a comparision."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DLpxUqiobwOO","executionInfo":{"status":"ok","timestamp":1612487095643,"user_tz":360,"elapsed":442,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"48334f65-e271-47c5-cbfc-c5790502ca84"},"source":["x = 10\n","\n","if x > 5:\n","  print(\"The value of x is larger than 5.\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The value of x is larger than 5.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"9JqVzuTJcJUU"},"source":["If you want to check multiple conditions, you could do the following:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DkLz0dwucIwU","executionInfo":{"status":"ok","timestamp":1612487103281,"user_tz":360,"elapsed":446,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"ddc950c5-734e-4e20-ac79-48c961156bd1"},"source":["x = 2\n","\n","if x > 5:\n","  print(\"The value of x is larger than 5.\")\n","else:\n","  print(\"The value of x is less than or equal to 5.\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The value of x is less than or equal to 5.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"baKfiLINbawT","executionInfo":{"status":"ok","timestamp":1612213651650,"user_tz":360,"elapsed":411,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"dbc3de51-2a25-4a73-d85d-7450ddc47190"},"source":["x = 5\n","\n","if x > 10:\n","  print(\"The value of x is larger than 10.\")\n","elif x > 5:\n","  print(\"The value of x is larger than 5.\")\n","else:\n","  print(\"The value of x is less than or equal to 5.\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The value of x is less than or equal to 5.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yZz-B-xQbatr"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ma2U3rVSbaq2"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7J0d23wi_w_s"},"source":["---\n","# for / in\n","You can easily go through all the values in a list using a for loop in Python."]},{"cell_type":"code","metadata":{"id":"NKqHOZOyh-wO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612213576385,"user_tz":360,"elapsed":750,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"246a1710-45f6-4363-86b9-9bab37ce872a"},"source":["items = [\"First Item\", \"Second Item\", \"Thrid Item\"]\n","\n","for item in items:\n","  print(item)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["First Item\n","Second Item\n","Thrid Item\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ohWb4aWYdZyQ"},"source":["Please note than we chose the name `item` just to make the code more readable. You could choose whatever name you prefer to represent the focal item in the loop list."]},{"cell_type":"markdown","metadata":{"id":"llaDQuJYdwUD"},"source":["If you prefer to have a loop that runs a piece of code a specific number of times, you can use `range` and specify the number of times you want to run the code."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wvnpQWOyeCkO","executionInfo":{"status":"ok","timestamp":1612487252164,"user_tz":360,"elapsed":411,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"c3f7e78e-cbd4-4e27-d955-25f5e8f8200e"},"source":["for i in range(1, 6):\n","  print(i)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1\n","2\n","3\n","4\n","5\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"CVpjrewdeV4e"},"source":["Since we often work with lists in Python, there is a very useful way to loop through the items in a list, do something with the item, and create a new list out of the modified items, all in one line."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w8TUWwfseT4P","executionInfo":{"status":"ok","timestamp":1612487273990,"user_tz":360,"elapsed":480,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"96b36961-1c57-45a0-fab3-36f2c017d906"},"source":["my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n","\n","new_my_list = [item for item in my_list if item%2 == 0]\n","\n","print(new_my_list)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[2, 4, 6, 8]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"hZJqBQO1MlcY"},"source":["---\n","# functions"]},{"cell_type":"markdown","metadata":{"id":"zsEXNa66hMyI"},"source":["If you have a piece of code that you might want to reuse several times in your analysis, you should define it as a function.\n","This way you can easily run the same piece of code over and over again."]},{"cell_type":"code","metadata":{"id":"pmVmbEObhMao"},"source":["def print_odd_numbers():\n","  for number in range(10):\n","    if number % 2 != 0:\n","      print(number)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sUzbs1gShMSb","executionInfo":{"status":"ok","timestamp":1612487335009,"user_tz":360,"elapsed":546,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"8656aa64-01c4-4e87-de6f-97a31d77f968"},"source":["print_odd_numbers()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1\n","3\n","5\n","7\n","9\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"k-kgKFCWh2ED"},"source":["To make functions more useful, you can actually send them some inputs and get back some outputs."]},{"cell_type":"code","metadata":{"id":"3mh0U_ekMjVg"},"source":["def odd_numbers_in_range(from_number, to_number):\n","  numbers = []\n","  for number in range(from_number, to_number):\n","    if number % 2 != 0:\n","      numbers.append(number)\n","  return numbers"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"idl_yw6sMjR3","executionInfo":{"status":"ok","timestamp":1612487385912,"user_tz":360,"elapsed":504,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"0d917221-deff-4ade-ffe3-c6dd79dc820e"},"source":["odd_numbers = odd_numbers_in_range(5, 14)\n","\n","print(odd_numbers)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[5, 7, 9, 11, 13]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oRs4xXmdMjKg"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oi98mxKbNrgp"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uKh1vSONj8CP"},"source":["We can use `lambda` functions to create small functions in Python.\n","\n","A lambda function is a small anonymous function.\n","\n","A lambda function can take any number of arguments, but can only have one expression.\n","\n","Let's say we want to write a shorter version of the following function:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0sJB44kvkQgx","executionInfo":{"status":"ok","timestamp":1612487515855,"user_tz":360,"elapsed":434,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"cb30a72b-a71c-4daa-cd24-642b51ec5916"},"source":["def square(number):\n","  return number*number\n","\n","y = square(5)\n","print(y)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["25\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"T3KHStOEkyVU"},"source":["The shorter version is written like this:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CK6IrogrkqpH","executionInfo":{"status":"ok","timestamp":1612487583824,"user_tz":360,"elapsed":439,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"38d7086f-3e1f-4dc5-8a9d-5c394e6a0fbe"},"source":["square = lambda number: number * number\n","\n","y = square(5)\n","print(y)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["25\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"P1VxprGQk8Im"},"source":["s1 = \"hello\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rN5PxXTAlDoo"},"source":["s2 = \"world\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dAiv2iEM6ZKA","executionInfo":{"status":"ok","timestamp":1612490333387,"user_tz":360,"elapsed":962,"user":{"displayName":"李兆智","photoUrl":"","userId":"07048029099122594957"}},"outputId":"22c1d6f1-5f1d-4772-8761-858a88d5d25c"},"source":["print(s1 + s2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["helloworld\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TxDwd2_ztwca"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jQh9E2T6twZ3","executionInfo":{"status":"ok","timestamp":1614802290852,"user_tz":360,"elapsed":261,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}}},"source":["# create a list\r\n","numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Iz1D6akNtwXi","executionInfo":{"status":"ok","timestamp":1614802461352,"user_tz":360,"elapsed":197,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}},"outputId":"598f7340-3b43-4f5c-b1dd-dc23ec251c7c"},"source":["# find even numbers\r\n","even = [];\r\n","\r\n","for number in numbers:\r\n","  if number % 2 == 0:\r\n","    print(number);\r\n","    even.append(number)"],"execution_count":5,"outputs":[{"output_type":"stream","text":["2\n","4\n","6\n","8\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W5MznzMptwVL","executionInfo":{"status":"ok","timestamp":1614802415415,"user_tz":360,"elapsed":200,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}},"outputId":"2f5c3f21-5e0e-462b-9d7a-5a7115a0f3d0"},"source":["number"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"USLTkGBetwS6","executionInfo":{"status":"ok","timestamp":1614802465611,"user_tz":360,"elapsed":220,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}},"outputId":"d082ea53-8634-4b79-8464-f4b1afa9a8c5"},"source":["even"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 4, 6, 8]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"mI3qgwiBtwQ2","executionInfo":{"status":"ok","timestamp":1614802578863,"user_tz":360,"elapsed":181,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}}},"source":["even2 = [num for num in numbers if num % 2 == 0] "],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vjn-DMl_twOQ","executionInfo":{"status":"ok","timestamp":1614802583018,"user_tz":360,"elapsed":260,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}},"outputId":"e59bf394-74d5-418d-901b-419e17228880"},"source":["even2"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 4, 6, 8]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"-ZsaRV8vtwLu","executionInfo":{"status":"ok","timestamp":1614802882737,"user_tz":360,"elapsed":221,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}}},"source":["# define a function, put user input inside the paranthesis\r\n","def check_even(x):\r\n","\r\n","  #below are the rules of this function\r\n","  if x % 2 == 0:\r\n","    return f'{x} is an even number.';\r\n","  else:\r\n","    return f'{x} is an odd number.';\r\n","  "],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"aTyWcMdZtwIz","executionInfo":{"status":"ok","timestamp":1614802872971,"user_tz":360,"elapsed":273,"user":{"displayName":"李兆智 Li Zhaozhi","photoUrl":"","userId":"07048029099122594957"}},"outputId":"1f1f2fb4-f749-49bb-b4a3-e5dbda51ec07"},"source":["#type the function name to call the function, pass value into the paranthesis\r\n","check_even(3)"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'3 is an odd number,'"]},"metadata":{"tags":[]},"execution_count":22}]}]}